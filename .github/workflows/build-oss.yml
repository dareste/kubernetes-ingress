name: Build OSS

on:
  workflow_call:
    inputs:
      platforms:
        required: true
        type: string
      image:
        required: true
        type: string
      tag:
        required: false
        type: string
      go-md5:
        required: true
        type: string
      base-image-md5:
        required: false
        type: string
      branch:
        required: false
        type: string
      forked-workflow:
        required: false
        type: boolean
    outputs:
      tag:
        description: "The tag that was built"
        value: ${{ jobs.build.outputs.tag }}
      digest:
        description: "The image digest"
        value: ${{ jobs.build.outputs.image_digest }}

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read # for docker/build-push-action to read repo content
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      id-token: write # for OIDC login to AWS ECR
      packages: write # for docker/build-push-action to push to GHCR
    outputs:
      tag: ${{ steps.meta.outputs.tags }}
      image_digest: ${{ steps.build-push.outputs.digest }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          ref: ${{ inputs.branch }}
          fetch-depth: 0

      - name: Setup QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0
        with:
          platforms: arm,arm64,ppc64le,s390x

      - name: Docker Buildx
        uses: docker/setup-buildx-action@2b51285047da1547ffb1b2203d8be4c0af6b1f20 # v3.2.0

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@55bd3a7c6e2ae7cf1877fd1ccb9d54c0503c457c # v2.1.2
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCR_WORKLOAD_IDENTITY }}
          service_account: ${{ secrets.GCR_SERVICE_ACCOUNT }}
        if: ${{ ! inputs.forked-workflow }}

      - name: Login to GCR
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
        if: ${{ ! inputs.forked-workflow }}

      - name: Check if base images exist
        id: base_exists
        run: |
          if docker pull gcr.io/f5-gcs-7899-ptg-ingrss-ctlr/dev/nginx-ic-base/oss:${{ inputs.base-image-md5 }}-${{ inputs.image }}; then
            echo "exists=0" >> $GITHUB_OUTPUT
          else
            echo "exists=1" >> $GITHUB_OUTPUT
          fi
        if: ${{ ! inputs.forked-workflow }}

      - name: Build Base Container
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          file: build/Dockerfile
          context: "."
          cache-from: type=gha,scope=${{ inputs.image }}
          cache-to: type=gha,scope=${{ inputs.image }},mode=max
          target: common
          tags: gcr.io/f5-gcs-7899-ptg-ingrss-ctlr/dev/nginx-ic-base/oss:${{ inputs.base-image-md5 }}-${{ inputs.image }}
          platforms: ${{ inputs.platforms }}
          pull: true
          push: true
          build-args: |
            BUILD_OS=${{ inputs.image }}
            IC_VERSION=${{ inputs.tag }}
        if: ${{ ! inputs.forked-workflow && steps.base_exists.outputs.exists != 0 }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          context: workflow
          images: |
            name=gcr.io/f5-gcs-7899-ptg-ingrss-ctlr/dev/nginx-ic/nginx-ingress
          flavor: |
            suffix=${{ contains(inputs.image, 'ubi') && '-ubi' || '' }}${{ contains(inputs.image, 'alpine') && '-alpine' || '' }}
          tags: |
            type=raw,value=${{ inputs.tag }}
          labels: |
            org.opencontainers.image.description=NGINX Ingress Controller for Kubernetes
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/nginxinc/kubernetes-ingress/main/README.md
            io.artifacthub.package.logo-url=https://docs.nginx.com/nginx-ingress-controller/images/icons/NGINX-Ingress-Controller-product-icon.svg
            io.artifacthub.package.maintainers=[{"name":"NGINX Inc","email":"kubernetes@nginx.com"}]
            io.artifacthub.package.license=Apache-2.0
            io.artifacthub.package.keywords=kubernetes,ingress,nginx,controller
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - name: Check if target image exists
        id: target_exists
        run: |
          if docker pull ${{ steps.meta.outputs.tags }}; then
            echo "exists=0" >> $GITHUB_OUTPUT
          else
            echo "exists=1" >> $GITHUB_OUTPUT
          fi
        if: ${{ ! inputs.forked-workflow }}

      - name: Fetch Cached Artifacts
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ${{ github.workspace }}/dist
          key: nginx-ingress-${{ inputs.go-md5 }}
        if: ${{ inputs.forked-workflow || steps.base_exists.outputs.exists != 0 || steps.target_exists.outputs.exists != 0 }}

      - name: Build Docker image
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        id: build-push
        with:
          file: build/Dockerfile
          context: "."
          cache-from: type=gha,scope=${{ inputs.image }}
          cache-to: type=gha,scope=${{ inputs.image }},mode=max
          target: goreleaser${{ ! inputs.forked-workflow && '-prebuilt' || '' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          platforms: ${{ inputs.platforms }}
          load: ${{ github.event_name == 'pull_request' || startsWith(github.ref, 'refs/heads/release-') }}
          push: ${{ ! inputs.forked-workflow }}
          pull: true
          no-cache: ${{ ! inputs.forked-workflow }}
          sbom: ${{ ! inputs.forked-workflow }}
          provenance: false
          build-args: |
            BUILD_OS=${{ inputs.image }}
            ${{ ! inputs.forked-workflow && format('PREBUILT_BASE_IMG=gcr.io/f5-gcs-7899-ptg-ingrss-ctlr/dev/nginx-ic-base/oss:{0}-{1}', inputs.base-image-md5, inputs.image) || '' }}
            IC_VERSION=${{ (github.event_name == 'pull_request' || startsWith(github.ref, 'refs/heads/release-')) && 'CI' || steps.meta.outputs.version }}
        if: ${{ inputs.forked-workflow || steps.base_exists.outputs.exists != 0 || steps.target_exists.outputs.exists != 0 }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@d710430a6722f083d3b36b8339ff66b32f22ee55 # 0.19.0
        continue-on-error: true
        with:
          image-ref: nginx/nginx-ingress:${{ steps.meta.outputs.version }}
          format: "sarif"
          output: "trivy-results-${{ inputs.image }}.sarif"
          ignore-unfixed: "true"
        if: ${{ ! inputs.forked-workflow && steps.build-push.conclusion == 'success' }}

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@1b1aada464948af03b950897e5eb522f92603cc2 # v3.24.9
        continue-on-error: true
        with:
          sarif_file: "trivy-results-${{ inputs.image }}.sarif"
        if: ${{ ! inputs.forked-workflow && steps.build-push.conclusion == 'success' }}

      - name: Upload Scan Results
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        continue-on-error: true
        with:
          name: "trivy-results-${{ inputs.image }}.sarif"
          path: "trivy-results-${{ inputs.image }}.sarif"
        if: always()
